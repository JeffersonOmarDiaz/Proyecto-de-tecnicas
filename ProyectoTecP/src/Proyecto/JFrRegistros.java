/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CASA
 */
public class JFrRegistros extends javax.swing.JFrame {

    /**
     * Creates new form JFrRegistros
     */
    ArrayList<Object> preListProduc = new ArrayList<>();

    Controlador controlador;
    String Fichero_productos = "Productos.dat";
    ArrayList<Object> productos = new ArrayList<>();

    //nuevo nombre para la tabla
    DefaultTableModel datosProducRegistro;
    DefaultTableModel AumentarProdcutos;

    boolean repetido;
    int seleccionTabla2;

    public JFrRegistros() {
        initComponents();

        this.setLocationRelativeTo(null);
        llenarCmbDefecto();

        desactivarOpciones();

        datosProducRegistro = (DefaultTableModel) jtblProductos.getModel();
        AumentarProdcutos = (DefaultTableModel) jTablelBusqueda.getModel();

        controlador = new Controlador();
        productos = controlador.extraerObjetos(Fichero_productos);

        if (controlador.extraerObjetos(Fichero_productos).isEmpty()) {
            controlador.crearFichero(Fichero_productos);
        }

        preListProduc = controlador.extraerObjetos(Fichero_productos);

        llenarTABLAproductos();
        lblCodBusque.setText("----------");
        lblTallaBusq.setText("----------");
        lblProBusqueda.setText("----------");
        lblUnidadesActuales.setText("----------");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        buttonGroupTallas = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        lblProducBusque = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodBuscado = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablelBusqueda = new javax.swing.JTable();
        btnBuscarProducto = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        btnSumaProductos = new javax.swing.JButton();
        btnCancelaSuma = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblUnidadesActuales = new javax.swing.JLabel();
        lblProBusqueda = new javax.swing.JLabel();
        lblTallaBusq = new javax.swing.JLabel();
        lblCodBusque = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbHMN = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtCodProd = new javax.swing.JTextField();
        btnGeneraCod = new javax.swing.JButton();
        jSpinnCantidad = new javax.swing.JSpinner();
        txtPrecioProd = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        BtnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblProductos = new javax.swing.JTable();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingrese el Código del Producto:");

        jTablelBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Camiseta para", "Talla", "Código", "Unidades disponibles", "Precio por unidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablelBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablelBusquedaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablelBusqueda);

        btnBuscarProducto.setText("Buscar Producto");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner1.setEnabled(false);

        jLabel2.setText("Cuantos productos va a ingresar:");

        btnSumaProductos.setText("Aumentar Productos");
        btnSumaProductos.setEnabled(false);
        btnSumaProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumaProductosActionPerformed(evt);
            }
        });

        btnCancelaSuma.setText("Cancelar");
        btnCancelaSuma.setEnabled(false);
        btnCancelaSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelaSumaActionPerformed(evt);
            }
        });

        jLabel3.setText("Camiseta de :");

        jLabel4.setText("Talla:");

        jLabel5.setText("Código Busqueda:");

        jLabel11.setText("Unidades actuales:");

        javax.swing.GroupLayout lblProducBusqueLayout = new javax.swing.GroupLayout(lblProducBusque);
        lblProducBusque.setLayout(lblProducBusqueLayout);
        lblProducBusqueLayout.setHorizontalGroup(
            lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblProducBusqueLayout.createSequentialGroup()
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblProducBusqueLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(btnSumaProductos))
                        .addGap(35, 35, 35)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lblProducBusqueLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarProducto)
                            .addComponent(txtCodBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblProducBusqueLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(lblProducBusqueLayout.createSequentialGroup()
                        .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(lblProducBusqueLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCancelaSuma))
                            .addGroup(lblProducBusqueLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblProBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(lblProducBusqueLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblTallaBusq, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(lblProducBusqueLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblUnidadesActuales, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addComponent(lblCodBusque, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
        );
        lblProducBusqueLayout.setVerticalGroup(
            lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblProducBusqueLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnBuscarProducto)
                .addGap(28, 28, 28)
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(lblProBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTallaBusq, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCodBusque, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(lblUnidadesActuales, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addGroup(lblProducBusqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSumaProductos)
                    .addComponent(btnCancelaSuma))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("AÑADIR PRODUCTOS EXISTENTES", lblProducBusque);

        jLabel6.setText("Camiseta para:");

        cmbHMN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHMNItemStateChanged(evt);
            }
        });

        jLabel7.setText("Talla:");

        jLabel8.setText("Unidades por producto:");
        jLabel8.setToolTipText("");

        jLabel9.setText("Código de camiseta:");

        jLabel10.setText("Precio de venta unidad:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(30, 30, 30)
                .addComponent(jLabel10))
        );

        txtCodProd.setText(" ");

        btnGeneraCod.setText("Generar código");
        btnGeneraCod.setToolTipText("Generar un codigo aleatorio si no sabe que código escribir");
        btnGeneraCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneraCodActionPerformed(evt);
            }
        });

        jSpinnCantidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinnCantidad.setToolTipText("Cantidades nuevas para ingreso ");

        txtPrecioProd.setToolTipText("Ingreso de precio de venta por unidad de producto");

        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Guardar nuevo registro");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Editar Registro de Producto");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Eliminar Registro de Producto");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        buttonGroupTallas.add(jRadioButton1);
        jRadioButton1.setText("S");

        buttonGroupTallas.add(jRadioButton2);
        jRadioButton2.setText("M");

        buttonGroupTallas.add(jRadioButton3);
        jRadioButton3.setText("L");

        buttonGroupTallas.add(jRadioButton4);
        jRadioButton4.setText("XL");

        buttonGroupTallas.add(jRadioButton5);
        jRadioButton5.setText("XXL");

        buttonGroupTallas.add(jRadioButton6);
        jRadioButton6.setText("DES");

        BtnCancelar.setText("Cancelar");
        BtnCancelar.setToolTipText("Cancelar proceso de: Guardar, Editar o Eliminar");
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecioProd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnGuardar)
                                .addGap(27, 27, 27)
                                .addComponent(btnEditar))
                            .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGeneraCod)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEliminar)
                                .addGap(27, 27, 27)
                                .addComponent(BtnCancelar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton6)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton5)
                            .addComponent(jRadioButton6))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGeneraCod))
                .addGap(18, 18, 18)
                .addComponent(jSpinnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPrecioProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(BtnCancelar)))
        );

        jtblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Camiseta", "Talla", "Código", "Unidades", "Precio Unidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblProductos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(cmbHMN, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbHMN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("REGISTRO DE NUEVOS PRODUCTOS", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblProductosMouseClicked
        // TODO add your handling code here:
        btnGuardar.setVisible(false);
        limpiarcamposTBP(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, false);
        int row = jtblProductos.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) jtblProductos.getModel();
        String codigo = String.valueOf(jtblProductos.getValueAt(row, 2));
        String unidades = String.valueOf(jtblProductos.getValueAt(row, 3));
        String precio = String.valueOf(jtblProductos.getValueAt(row, 4));
        String talla = String.valueOf(jtblProductos.getValueAt(row, 1));

        txtCodProd.setText(codigo);
        txtPrecioProd.setText(precio);
        jSpinnCantidad.setValue(Integer.parseInt(unidades));

        desactivarCampos(false);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        BtnCancelar.setEnabled(true);
    }//GEN-LAST:event_jtblProductosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        //Sección 1
        //DefaultTableModel model = (DefaultTableModel) jtblProductos.getModel();

        //Sección 2
        int a = jtblProductos.getSelectedRow();
        System.out.println("LA filka seleccionada ha sido: " + a);

        //Sección 3
        if (a < 0) {

            JOptionPane.showMessageDialog(null,
                    "Debe seleccionar una fila de la tabla");

        } else {

            //Sección 4
            int confirmar = JOptionPane.showConfirmDialog(null,
                    "Esta seguro que desea Eliminar el registro? ");

            //Sección 5
            if (JOptionPane.OK_OPTION == confirmar) {
                //Sección 6
                limpiarcamposTBP(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, true);
                datosProducRegistro.removeRow(a);
                AumentarProdcutos.removeRow(a);
                productos.remove(a);
                controlador.escribirObjeto(Fichero_productos, productos);
                //Sección 7
                JOptionPane.showMessageDialog(null, "Registro Eliminado");
                desactivarOpciones();
                BtnCancelar.setEnabled(false);
                btnGuardar.setVisible(true);
                btnGuardar.setEnabled(false);
            }

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        try {
            int row = jtblProductos.getSelectedRow();
            String codProd = txtCodProd.getText();
            int unidades = (int) jSpinnCantidad.getValue();
            double precio = Double.valueOf(txtPrecioProd.getText());
            String camisetaDE = (String) cmbHMN.getSelectedItem();
            escuchaCMB(camisetaDE);
            String talla;

            //ClsProductos pr = (ClsProductos) productos.get(row);
            if (cmbHMN.getSelectedItem().equals("Seleccione")) {
                JOptionPane.showMessageDialog(null, "Asegurese de escoger camiseta para: Hombre, Mujer o Niñ@", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (codProd.equals("") || txtPrecioProd.equals("")) {
                JOptionPane.showMessageDialog(this, "Asegurese de llenar todos los campos");
            } else {

                if (jRadioButton1.isSelected()) {
                    talla = "S";
                    System.out.println("Talla S");
//                    pr.setCamisetaPara(camisetaDE);
//                    pr.setTalla(talla);
//                    pr.setCodigo(codProd);
//                    pr.setUnidadProdcu(unidades);
//                    pr.setPrecioVentaUnid(precio);
//                    ingresar_en_Archivo_DAT(talla);

                } else if (jRadioButton2.isSelected()) {
                    talla = "M";
                    System.out.println("Talla M");
                    //                    llenaPTabla(camisetaDE, talla, codProd, unidades, precio);

                    System.out.println("Talla S");
//                    pr.setCamisetaPara(camisetaDE);
//                    pr.setTalla(talla);
//                    pr.setCodigo(codProd);
//                    pr.setUnidadProdcu(unidades);
//                    pr.setPrecioVentaUnid(precio);
//                                        ingresar_en_Archivo_DAT(talla);
                } else if (jRadioButton3.isSelected()) {
                    System.out.println("Talla L");
                    talla = "L";

                    System.out.println("Talla S");
//                    pr.setCamisetaPara(camisetaDE);
//                    pr.setTalla(talla);
//                    pr.setCodigo(codProd);
//                    pr.setUnidadProdcu(unidades);
//                    pr.setPrecioVentaUnid(precio);
//                                        ingresar_en_Archivo_DAT(talla);
                } else if (jRadioButton4.isSelected()) {
                    System.out.println("Talla XL");
                    talla = "XL";
//                                        ingresar_en_Archivo_DAT(talla);
                    System.out.println("Talla S");
//                    pr.setCamisetaPara(camisetaDE);
//                    pr.setTalla(talla);
//                    pr.setCodigo(codProd);
//                    pr.setUnidadProdcu(unidades);
//                    pr.setPrecioVentaUnid(precio);
                } else if (jRadioButton5.isSelected()) {
                    System.out.println("Talla XXL");
                    talla = "XXL";
//                                        ingresar_en_Archivo_DAT(talla);
//                    System.out.println("Talla S");
//                    pr.setCamisetaPara(camisetaDE);
//                    pr.setTalla(talla);
//                    pr.setCodigo(codProd);
//                    pr.setUnidadProdcu(unidades);
//                    pr.setPrecioVentaUnid(precio);
                } else {
                    JOptionPane.showMessageDialog(this, "No ha escogido una talla");
                    return;
                }
//                ingresar_en_Archivo_DAT(codProd);
                //TextLayout.ANALYSIS_MASK;
                if (codProd.equals(jtblProductos.getValueAt(row, 2))) {

//                    ClsProductos Pr = new ClsProductos(camisetaDE, talla, codProd, unidades, precio);
//                    System.out.println("Tratando de registrar 2");
//                    productos.add(Pr);
//                    controlador.escribirObjeto(Fichero_productos, productos);
//                    llenarTABLAproductos();
//                    datosProducRegistro.removeRow(row);
//                    productos.remove(row);
//                    controlador.escribirObjeto(Fichero_productos, productos);
//                    System.out.println("Producto de codigo: " + codProd);
                    int columna = jtblProductos.getSelectedRow();
                    System.out.println("LA posicion actual es: " + columna);
                    ClsProductos product = (ClsProductos) productos.get(columna);
                    product.setCamisetaPara(camisetaDE);
                    product.setTalla(talla);
                    product.setCodigo(codProd);
                    product.setPrecioVentaUnid(precio);
                    product.setUnidadProdcu(unidades);

                    controlador.escribirObjeto(Fichero_productos, productos);
                    datosProducRegistro.setValueAt(product.getCamisetaPara(), columna, 0);
                    datosProducRegistro.setValueAt(product.getTalla(), columna, 1);
                    datosProducRegistro.setValueAt(product.getCodigo(), columna, 2);
                    datosProducRegistro.setValueAt(product.getUnidadProdcu(), columna, 3);
                    datosProducRegistro.setValueAt(product.getPrecioVentaUnid(), columna, 4);

                    ////*********** modificacion de productos vista en tabla de aumentar produtos 
                    AumentarProdcutos.setValueAt(product.getCamisetaPara(), columna, 0);
                    AumentarProdcutos.setValueAt(product.getTalla(), columna, 1);
                    AumentarProdcutos.setValueAt(product.getCodigo(), columna, 2);
                    AumentarProdcutos.setValueAt(product.getUnidadProdcu(), columna, 3);
                    AumentarProdcutos.setValueAt(product.getPrecioVentaUnid(), columna, 4);
                    //llenarTABLAproductos();

                    System.out.println("En donde se escribio fue en " + columna);
                    System.out.println("Producto de codigo: " + codProd);
                    btnGuardar.setVisible(true);
                    activarCampos(false);
                    btnEliminar.setEnabled(false);
                    btnEditar.setEnabled(false);
                    BtnCancelar.setEnabled(false);
                    desactivarOpciones();
                } else {

                    ClsProductos pr = new ClsProductos(camisetaDE, talla, codProd, unidades, precio);
                    //boolean repetido = false;
                    if (productos.size() >= 0) {
                        System.out.println("restriccion de productos mayores a cero");
                        System.out.println("El tamaño de productos es : " + productos.size());
                        for (int i = 0; i < productos.size(); i++) {
                            pr = (ClsProductos) productos.get(i);
                            Object registro_Productos[] = {pr.getCamisetaPara(), pr.getTalla(), pr.getCodigo(), pr.getUnidadProdcu(), pr.getPrecioVentaUnid()};
                            if (registro_Productos[2].equals(txtCodProd.getText())) {
                                System.out.println("El codigo que quiere ingresar es: " + txtCodProd.getText() + " y el actual es: " + registro_Productos[2]);
                                JOptionPane.showMessageDialog(this, "Este codigo ya existe ingrese uno nuevo o genere uno aleatorio");

                                repetido = true;
                            }
                        }
                    }

                }
                if (repetido == false) {
                    int columna = jtblProductos.getSelectedRow();
                    System.out.println("LA posicion actual es: " + columna);
                    ClsProductos product = (ClsProductos) productos.get(columna);
                    product.setCamisetaPara(camisetaDE);
                    product.setTalla(talla);
                    product.setCodigo(codProd);
                    product.setPrecioVentaUnid(precio);
                    product.setUnidadProdcu(unidades);

                    controlador.escribirObjeto(Fichero_productos, productos);
                    datosProducRegistro.setValueAt(product.getCamisetaPara(), columna, 0);
                    datosProducRegistro.setValueAt(product.getTalla(), columna, 1);
                    datosProducRegistro.setValueAt(product.getCodigo(), columna, 2);
                    datosProducRegistro.setValueAt(product.getUnidadProdcu(), columna, 3);
                    datosProducRegistro.setValueAt(product.getPrecioVentaUnid(), columna, 4);

                    ///*********** modificacion de productos vista en tabla de aumentar produtos 
                    AumentarProdcutos.setValueAt(product.getCamisetaPara(), columna, 0);
                    AumentarProdcutos.setValueAt(product.getTalla(), columna, 1);
                    AumentarProdcutos.setValueAt(product.getCodigo(), columna, 2);
                    AumentarProdcutos.setValueAt(product.getUnidadProdcu(), columna, 3);
                    AumentarProdcutos.setValueAt(product.getPrecioVentaUnid(), columna, 4);

                    System.out.println("En donde se escribio fue en " + columna);
                    System.out.println("Producto de codigo: " + codProd);
                    btnGuardar.setVisible(true);
                    activarCampos(false);
                    btnEliminar.setEnabled(false);
                    btnEditar.setEnabled(false);
                    BtnCancelar.setEnabled(false);
                    desactivarOpciones();
                }

            }

        } catch (NumberFormatException ex) {
            //.....aqui lo que quieras hacer si los campos estan vacios y tratan de calcular el total...
            JOptionPane.showMessageDialog(this, "Ingrese un valor numerico en el campo de precio ejemplo 1, 2, 3 ...");
        }
        desactivarOpciones();
        activarCampos(false);
        limpiarcamposTBP(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        try {
            String codProd = txtCodProd.getText();
            int unidades = (int) jSpinnCantidad.getValue();
            double precio = Double.valueOf(txtPrecioProd.getText());
            String camisetaDE = (String) cmbHMN.getSelectedItem();
            escuchaCMB(camisetaDE);
            String talla;
            if (codProd.equals("") || txtPrecioProd.equals("") || cmbHMN.getSelectedItem().equals("Seleccione")) {
                JOptionPane.showMessageDialog(this, "Llene todos los campos");
            } else {
                if (jRadioButton1.isSelected()) {
                    talla = "S";
                    System.out.println("Talla S");
                    ingresar_en_Archivo_DAT(talla);
                } else if (jRadioButton2.isSelected()) {
                    talla = "M";
                    System.out.println("Talla M");
                    //llenaPTabla(camisetaDE, talla, codProd, unidades, precio);
                    ingresar_en_Archivo_DAT(talla);
                } else if (jRadioButton3.isSelected()) {
                    System.out.println("Talla L");
                    talla = "L";
                    ingresar_en_Archivo_DAT(talla);
                } else if (jRadioButton4.isSelected()) {
                    System.out.println("Talla XL");
                    talla = "XL";
                    ingresar_en_Archivo_DAT(talla);
                } else if (jRadioButton5.isSelected()) {
                    System.out.println("Talla XXL");
                    talla = "XXL";
                    ingresar_en_Archivo_DAT(talla);
                } else {
                    JOptionPane.showMessageDialog(this, "No ha escogido una talla");
                }
            }

        } catch (NumberFormatException ex) {
            //.....aqui lo que quieras hacer si los campos estan vacios y tratan de calcular el total...
            JOptionPane.showMessageDialog(this, "Ingrese un valor numerico en el campo de precio ejemplo 1, 2, 3 ...");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGeneraCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneraCodActionPerformed
        // TODO add your handling code here
        generarCodigoPRODUC();
    }//GEN-LAST:event_btnGeneraCodActionPerformed

    private void cmbHMNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHMNItemStateChanged
        // TODO add your handling code here:
        DesmarcarBotonesSelec(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, true);
        String escucha = (String) cmbHMN.getSelectedItem();
        //btnGuardar.setVisible(true);
        BtnCancelar.setEnabled(true);
        escuchaCMB(escucha);
    }//GEN-LAST:event_cmbHMNItemStateChanged

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        limpiarcamposTBP(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, true);
        desactivarCampos(false);
        activarCampos(false);
        desactivarOpciones();
        btnGuardar.setVisible(true);
        btnGuardar.setEnabled(false);
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void jTablelBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablelBusquedaMouseClicked
        // TODO add your handling code here:
        int row = jTablelBusqueda.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) jTablelBusqueda.getModel();
        String codigo = String.valueOf(jTablelBusqueda.getValueAt(row, 2));
        String unidades = String.valueOf(jTablelBusqueda.getValueAt(row, 3));
        String talla = String.valueOf(jTablelBusqueda.getValueAt(row, 1));
        String producto = String.valueOf(jTablelBusqueda.getValueAt(row, 0));

        lblCodBusque.setText(codigo);
        lblTallaBusq.setText(talla);
        lblProBusqueda.setText(producto);
        lblUnidadesActuales.setText(unidades);

        txtCodBuscado.setText(codigo);

        desactivarCampos(false);
        btnSumaProductos.setEnabled(true);
        btnCancelaSuma.setEnabled(true);
        jSpinner1.setEnabled(true);
    }//GEN-LAST:event_jTablelBusquedaMouseClicked

    private void btnCancelaSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelaSumaActionPerformed
        // TODO add your handling code here:
        lblCodBusque.setText("----------");
        lblTallaBusq.setText("----------");
        lblProBusqueda.setText("----------");
        lblUnidadesActuales.setText("----------");
        txtCodBuscado.setText(null);
        jSpinner1.setEnabled(false);
        btnCancelaSuma.setEnabled(false);
        btnSumaProductos.setEnabled(false);
        jSpinner1.setValue(0);

        jTablelBusqueda.setSelectionMode(seleccionTabla2);//.addSelectionInterval(seleccionTabla2, seleccionTabla2);
        seleccionTabla2=0;
    }//GEN-LAST:event_btnCancelaSumaActionPerformed

    private void btnSumaProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumaProductosActionPerformed
        int unidadSumarBase = (int) jSpinner1.getValue();
        int unidadBase = Integer.parseInt(lblUnidadesActuales.getText());
        int total = unidadSumarBase + unidadBase;
        String cod = lblCodBusque.getText();
        System.out.println("El total es de " + total);

        int columna = jTablelBusqueda.getSelectedRow();
        System.out.println("LA posicion actual es: " + columna);
        ClsProductos product = (ClsProductos) productos.get(columna);
        product.setUnidadProdcu(total);

        controlador.escribirObjeto(Fichero_productos, productos);
        datosProducRegistro.setValueAt(total, columna, 3);
        AumentarProdcutos.setValueAt(total, columna, 3);
        btnCancelaSuma.setEnabled(false);
        btnSumaProductos.setEnabled(false);
        jSpinner1.setEnabled(false);
        jSpinner1.setValue(0);

        lblCodBusque.setText("----------");
        lblTallaBusq.setText("----------");
        lblProBusqueda.setText("----------");
        lblUnidadesActuales.setText("----------");
        txtCodBuscado.setText(null);
        JOptionPane.showMessageDialog(this, "Se aumentaron " + unidadSumarBase + " al producto de código: " + cod);
        jTablelBusqueda.setSelectionMode(seleccionTabla2);//.addSelectionInterval(seleccionTabla2, seleccionTabla2);
        seleccionTabla2=0;
    }//GEN-LAST:event_btnSumaProductosActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        // TODO add your handling code here:
        if (txtCodBuscado.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese un codigo para aumentar productos");
        } else {
            int row = jTablelBusqueda.getSelectedRow();
            ClsProductos pr = new ClsProductos();
            for (int i = 0; i < productos.size(); i++) {
                pr = (ClsProductos) productos.get(i);
                Object registro_Productos[] = {pr.getCamisetaPara(), pr.getTalla(), pr.getCodigo(), pr.getUnidadProdcu(), pr.getPrecioVentaUnid()};
                if (registro_Productos[2].equals(txtCodBuscado.getText())) {
                    System.out.println(i);
                    repetido = true;

                    int unidades = (int) registro_Productos[3];
                    lblCodBusque.setText((String) registro_Productos[2]);
                    lblTallaBusq.setText((String) registro_Productos[1]);
                    lblProBusqueda.setText((String) registro_Productos[0]);
                    lblUnidadesActuales.setText(String.valueOf(unidades));
                    System.out.println("Unidades actuales" + unidades);

                    seleccionTabla2 = i;
                    System.out.println("La pocicio final de tabla " + seleccionTabla2);
                    jTablelBusqueda.getSelectionModel().addSelectionInterval(seleccionTabla2, seleccionTabla2);
                    btnCancelaSuma.setEnabled(true);
                    btnSumaProductos.setEnabled(true);
                    jSpinner1.setEnabled(repetido);
                    return;
                }
            }
            if (repetido = true) {
                btnCancelaSuma.setEnabled(false);
                btnSumaProductos.setEnabled(false);
                jSpinner1.setEnabled(false);
                jSpinner1.setValue(0);

                lblCodBusque.setText("----------");
                lblTallaBusq.setText("----------");
                lblProBusqueda.setText("----------");
                lblUnidadesActuales.setText("----------");

                JOptionPane.showMessageDialog(null, "No existe el codigo buscado", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    public void DesmarcarBotonesSelec(JRadioButton tallaS, JRadioButton tallaM, JRadioButton tallaL, JRadioButton tallaXL, JRadioButton tallaXXL, JRadioButton tallaDESC, boolean y) {

        tallaS.setSelected(y);
        tallaM.setSelected(y);
        tallaL.setSelected(y);
        tallaXL.setSelected(y);
        tallaXXL.setSelected(y);
        tallaDESC.setSelected(y);
    }

    public void generarCodigoPRODUC() {
        //link para generar codigo: https://www.youtube.com/watch?v=4i86fXQkVoY
        txtCodProd.setText(null);
        String a = jSpinnCantidad.getValue().toString();
        System.out.println("El valor de la cantidad es: " + a);

        JFrRegistros generaCogigo = new JFrRegistros();
        String mayusc, minus, caracte, numer, resultado = "";
        int numCaracteres = 5;

        minus = "abcdefghijhlmnñopqrtuwxyz";
//Declaramos el abecedario en minúscula
        mayusc = "ABCDEFGHIJQLMNOPQRTSUVWXYZ";
//Declaramos el abecedario en mayúscula
//        caracte = "+-*/=%&#!?^“‘~|<>()[]{}:;.,";
//Declaramos los carácteres especiales
        numer = "1234567890";//Declaramos los números

        Scanner scan = new Scanner(System.in);

//        System.out.println("numero de caracteres minusculas");
//        numCaracteres=scan.nextInt();
        resultado = generaCogigo.aleatoria(resultado, minus, numCaracteres);

//        System.out.println("numero de caracteres maysuculas");
//        numCaracteres=scan.nextInt();
        resultado = generaCogigo.aleatoria(resultado, mayusc, numCaracteres);

//        System.out.println("numero de caracteres especiales");
//        numCaracteres=scan.nextInt();
//        resultado= generaCogigo.aleatoria(resultado, caracte, numCaracteres);
//        System.out.println("numero de caracteres numericos");
//        numCaracteres=scan.nextInt();
        resultado = generaCogigo.aleatoria(resultado, numer, numCaracteres);

        System.out.println("Codigo " + resultado);

        String arrayPaloabras[] = resultado.split("");
        Collections.shuffle(Arrays.asList(arrayPaloabras));
        resultado = "";
        for (int i = 0; arrayPaloabras.length > i; i++) {
            resultado = resultado + arrayPaloabras[i];
        }
        System.out.println("Codigo mesclado: " + resultado);
        txtCodProd.setText(resultado);
    }

    public void ingresar_en_Archivo_DAT(String talla) {
        System.out.println("Llega al Archivo DAT El valor que se quiere ingresa es de :" + talla);
        String codProd = txtCodProd.getText();
        int unidades = (int) jSpinnCantidad.getValue();
        double precio = Double.valueOf(txtPrecioProd.getText());
        String camisetaDE = (String) cmbHMN.getSelectedItem();
        //String talla;
        System.out.println(camisetaDE + talla + codProd + unidades + precio);
        ClsProductos P1 = new ClsProductos(camisetaDE, talla, codProd, unidades, precio);
//        datosProducRegistro.setRowCount(0);
        boolean repetido = false;
        if (productos.size() >= 0) {
            System.out.println("restriccion de productos mayores a cero");
            System.out.println("El tamaño de productos es : " + productos.size());
            for (int i = 0; i < productos.size(); i++) {
                P1 = (ClsProductos) productos.get(i);
                Object registro_Productos[] = {P1.getCamisetaPara(), P1.getTalla(), P1.getCodigo(), P1.getUnidadProdcu(), P1.getPrecioVentaUnid()};
                if (registro_Productos[2].equals(codProd)) {
                    JOptionPane.showMessageDialog(this, "Este codigo ya existe ingrese uno nuevo o genere uno aleatorio");
                    System.out.println(i);
                    repetido = true;
                }
            }

        }
        if (repetido == false) {
            ClsProductos Pr = new ClsProductos(camisetaDE, talla, codProd, unidades, precio);
            System.out.println("Tratando de registrar 2");
            productos.add(Pr);
            controlador.escribirObjeto(Fichero_productos, productos);

//            AumentarProdcutos.setValueAt(Pr.getCamisetaPara(), columna, 0);
//                    AumentarProdcutos.setValueAt(Pr.getTalla(), columna, 1);
//                    AumentarProdcutos.setValueAt(Pr.getCodigo(), columna, 2);
//                    AumentarProdcutos.setValueAt(Pr.getUnidadProdcu(), columna, 3);
//                    AumentarProdcutos.setValueAt(Pr.getPrecioVentaUnid(), columna, 4);
            llenarTABLAproductos();
        }
    }

    public void llenarTABLAproductos() {
        datosProducRegistro.setRowCount(0);
        AumentarProdcutos.setRowCount(0);
        System.out.println("Tratando de llenar la tabla");
        if (productos.size() >= 0) {
            ClsProductos pro;
            for (int i = 0; i < productos.size(); i++) {
                pro = (ClsProductos) productos.get(i);
                Object registro_ProD[] = {pro.getCamisetaPara(), pro.getTalla(), pro.getCodigo(), pro.getUnidadProdcu(), pro.getPrecioVentaUnid()};
                datosProducRegistro.addRow(registro_ProD);
                AumentarProdcutos.addRow(registro_ProD);
                limpiarcamposTBP(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, true);
            }
        }
        //limpiarcamposTBP(jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, true);
        //JOptionPane.showMessageDialog(this, "Producot guardado exitosamente");
        desactivarCampos(false);
    }

    public void llenarCmbDefecto() {

        cmbHMN.addItem("Seleccione");
        cmbHMN.addItem("Hombre");
        cmbHMN.addItem("Mujer");
        cmbHMN.addItem("Niñ@");

    }

    public void desactivarOpciones() {
        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
        jRadioButton3.setEnabled(false);
        jRadioButton4.setEnabled(false);
        jRadioButton5.setEnabled(false);
        jRadioButton6.setVisible(false);

        txtCodProd.setEnabled(false);
        txtPrecioProd.setEnabled(false);

        jSpinnCantidad.setEnabled(false);

        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGeneraCod.setEnabled(false);
        btnGuardar.setEnabled(false);
        BtnCancelar.setEnabled(false);
    }

    public void limpiarcamposTBP(JRadioButton tallaS, JRadioButton tallaM, JRadioButton tallaL, JRadioButton tallaXL, JRadioButton tallaXXL, JRadioButton tallaDESC, boolean opcion) {

        txtCodProd.setText(null);
        txtPrecioProd.setText(null);
        jSpinnCantidad.setValue(0);
        tallaS.setSelected(opcion);
        tallaM.setSelected(opcion);
        tallaL.setSelected(opcion);
        tallaXL.setSelected(opcion);
        tallaXXL.setSelected(opcion);
        tallaDESC.setSelected(opcion);
    }

    public void llenaPTabla(String nomPro, String talla, String codPro, int unidades, double precioU) {
        DefaultTableModel modelo = (DefaultTableModel) jtblProductos.getModel();
        Object filaNueva[] = {nomPro, talla, codPro, unidades, precioU};

        DefaultTableModel modelo1 = (DefaultTableModel) jtblProductos.getModel();

        //**********************segunda aplicacion
        // Sección 2
        Object[] fila = new Object[5];

        //Sección 3
        fila[0] = nomPro;
        fila[1] = talla;
        fila[2] = codPro;
        fila[3] = unidades;
        fila[4] = precioU;

        //Sección 4
        modelo1.addRow(fila);

        //Sección 5
        jtblProductos.setModel(modelo1);
    }

    public void escuchaCMB(String escucha) {
        System.out.println("Llega a la escucha");
        if (escucha.equals("Hombre")) {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
            jRadioButton4.setEnabled(true);
            jRadioButton5.setEnabled(true);
            activarCampos(true);

        } else if (escucha.equals("Mujer")) {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
            jRadioButton4.setEnabled(true);
            jRadioButton5.setEnabled(false);
            activarCampos(true);

        } else if (escucha.equals("Niñ@")) {
            System.out.println("Comaracion e niño la escucha fue" + escucha);
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(false);
            jRadioButton3.setEnabled(false);
            jRadioButton4.setEnabled(false);
            jRadioButton5.setEnabled(false);
            activarCampos(true);
        } else {
            desactivarCampos(false);
        }
    }

    public void desactivarCampos(boolean activar) {
        jRadioButton1.setEnabled(activar);
        jRadioButton2.setEnabled(activar);
        jRadioButton3.setEnabled(activar);
        jRadioButton4.setEnabled(activar);
        jRadioButton5.setEnabled(activar);
        txtCodProd.setEnabled(activar);
        txtPrecioProd.setEnabled(activar);
        jSpinnCantidad.setEnabled(activar);
        btnGeneraCod.setEnabled(activar);
    }

    public void activarCampos(boolean activar) {
        txtCodProd.setEnabled(activar);
        txtPrecioProd.setEnabled(activar);
        jSpinnCantidad.setEnabled(activar);
        btnGeneraCod.setEnabled(activar);
        btnGuardar.setEnabled(activar);
    }

    public String aleatoria(String resultado, String palabras, int numero) {
        String[] arrayPalabra = palabras.split("");
        int aleatorio = 0;
        for (int i = 0; i < numero; i++) {
            aleatorio = (int) (Math.random() * (arrayPalabra.length - 1) + 0);

            resultado = resultado + arrayPalabra[aleatorio];
        }
        return resultado;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrRegistros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrRegistros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnCancelaSuma;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGeneraCod;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSumaProductos;
    private javax.swing.ButtonGroup buttonGroupTallas;
    private javax.swing.JComboBox<String> cmbHMN;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnCantidad;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTablelBusqueda;
    private javax.swing.JTable jtblProductos;
    private javax.swing.JLabel lblCodBusque;
    private javax.swing.JLabel lblProBusqueda;
    private javax.swing.JPanel lblProducBusque;
    private javax.swing.JLabel lblTallaBusq;
    private javax.swing.JLabel lblUnidadesActuales;
    private javax.swing.JTextField txtCodBuscado;
    private javax.swing.JTextField txtCodProd;
    private javax.swing.JTextField txtPrecioProd;
    // End of variables declaration//GEN-END:variables
}
