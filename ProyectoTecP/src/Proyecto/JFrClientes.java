/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;

import ConexionInter.Conexion;
import ConexionInter.ProcedimientosAlmacenados;
import com.sun.istack.internal.logging.Logger;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Omar
 */
public class JFrClientes extends javax.swing.JFrame {

    DefaultTableModel registroClientes;

    ConexionInter.Conexion con = new Conexion();
    Connection cn = con.getConnection();

    int seleccionTabla2;

    public JFrClientes() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.setTitle("REGISTRO DE CLIENTES");
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource(("imagenes/logo.jpeg")));
        this.setIconImage(icono);

        registroClientes = (DefaultTableModel) jtbClientes.getModel();

        llenarTablaClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtCedula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTlf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        btnGuardarClien = new javax.swing.JButton();
        btnEliminarClient = new javax.swing.JButton();
        btnCancelaAccion = new javax.swing.JButton();
        btnModificarClien = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Registro de Clientes");

        txtCedula.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Cédula:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Apellido:");

        txtApellido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Dirección:");

        txtDireccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDireccionKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Teléfono:");

        txtTlf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTlf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTlfKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Email:");

        txtMail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnGuardarClien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardarClien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AgregarPersona.png"))); // NOI18N
        btnGuardarClien.setText("Guardar");
        btnGuardarClien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarClienActionPerformed(evt);
            }
        });

        btnEliminarClient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminarClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminarPersona.png"))); // NOI18N
        btnEliminarClient.setText("Eliminar");
        btnEliminarClient.setEnabled(false);
        btnEliminarClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClientActionPerformed(evt);
            }
        });

        btnCancelaAccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelaAccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        btnCancelaAccion.setText("Cancelar");
        btnCancelaAccion.setEnabled(false);
        btnCancelaAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelaAccionActionPerformed(evt);
            }
        });

        btnModificarClien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModificarClien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editarPersona.png"))); // NOI18N
        btnModificarClien.setText("Modificar");
        btnModificarClien.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTlf, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificarClien)
                    .addComponent(btnGuardarClien)
                    .addComponent(btnEliminarClient)
                    .addComponent(btnCancelaAccion))
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnGuardarClien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarClien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelaAccion)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(236, 236, 236))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jtbClientes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarClienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarClienActionPerformed
        // TODO add your handling code here:
//        String x = String.valueOf(txtCedula.getText());
//        validaCedula(x);

//        try 
//        {
        String cedula = String.valueOf(txtCedula.getText());
        String nombre = txtNombre.getText();
        String apellido = txtApellido.getText();
        String direccion = txtDireccion.getText();
        String telefono = String.valueOf(txtTlf.getText());
        String email = txtMail.getText();

        System.out.println("el valor de la cedula es: " + cedula);

        if (cedula.equals("") || nombre.equals("") || apellido.equals("") || direccion.equals("") || telefono.equals("")) {
            JOptionPane.showMessageDialog(null, "Asegurese de llenar todos los campos!!", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            if (validaCedula(cedula) == false) {
                JOptionPane.showMessageDialog(null, "Número de cédula no válido!!", "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                if (email.equals("")) {
                    RegistrarCliente();
                } else {
                    if (ValidarEmail(email) == false) {
                        return;
                    } else {
                        RegistrarCliente();
                    }
                }

            }
//            }
        }

    }//GEN-LAST:event_btnGuardarClienActionPerformed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        int k = (int) evt.getKeyChar();
        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No puede ingresar letras en la cédula!!!", "Error de letras", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 241 || k == 209) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No puede ingresar letras en la cédula!!!", "Error de letras", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtCedula.transferFocus();
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtTlfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTlfKeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No puede ingresar letras en la Teléfono!!!", "Error de letras", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 241 || k == 209) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No puede ingresar letras en Teléfono!!!", "Error de letras", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtCedula.transferFocus();
        }
    }//GEN-LAST:event_txtTlfKeyTyped

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        // TODO add your handling code here:
        String cadena = (txtNombre.getText()).toUpperCase();
        txtNombre.setText(cadena);
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyReleased
        // TODO add your handling code here:
        String cadena = (txtApellido.getText()).toUpperCase();
        txtApellido.setText(cadena);
    }//GEN-LAST:event_txtApellidoKeyReleased

    private void txtDireccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyReleased
        // TODO add your handling code here:
        String cadena = (txtDireccion.getText()).toUpperCase();
        txtDireccion.setText(cadena);
    }//GEN-LAST:event_txtDireccionKeyReleased

    private void btnEliminarClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClientActionPerformed
        // TODO add your handling code here:
        int a = jtbClientes.getSelectedRow();
        System.out.println("LA fila seleccionada ha sido: " + a);

        //Sección 3
        if (a < 0) {

            JOptionPane.showMessageDialog(null,
                    "Debe seleccionar una fila de la tabla");

        } else {

            //Sección 4
            int confirmar = JOptionPane.showConfirmDialog(null,
                    "Esta seguro que desea Eliminar el registro? ");

            //Sección 5
            if (JOptionPane.OK_OPTION == confirmar) {
                try {
                    System.out.println("LO que quiero eliminar es: " + jtbClientes.getValueAt(a, 0).toString());
                    ProcedimientosAlmacenados.EliminarClienteCod(jtbClientes.getValueAt(a, 0).toString());

                    //Sección 6
                    llenarTablaClientes();
                    //Sección 7
                    JOptionPane.showMessageDialog(null, "Registro Eliminado");
                    limpiarCampos();

                    btnCancelaAccion.setEnabled(false);
                    btnEliminarClient.setEnabled(false);
                    btnModificarClien.setEnabled(false);
                    btnGuardarClien.setEnabled(true);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "No se puede elminar este registro " + e);
                }

            }

        }
    }//GEN-LAST:event_btnEliminarClientActionPerformed

    private void jtbClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbClientesMouseClicked
        // TODO add your handling code here:
        int row = jtbClientes.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) jtbClientes.getModel();
        String cedula = String.valueOf(jtbClientes.getValueAt(row, 0));
        String apellido = String.valueOf(jtbClientes.getValueAt(row, 1));
        String nombre = String.valueOf(jtbClientes.getValueAt(row, 2));
        String direccion = String.valueOf(jtbClientes.getValueAt(row, 3));
        String telefono = String.valueOf(jtbClientes.getValueAt(row, 4));
        String email = String.valueOf(jtbClientes.getValueAt(row, 5));

        txtCedula.setText(cedula);
        txtNombre.setText(nombre);
        txtApellido.setText(apellido);
        txtDireccion.setText(direccion);
        txtTlf.setText(telefono);
        txtMail.setText(email);
        
        btnCancelaAccion.setEnabled(true);
        btnEliminarClient.setEnabled(true);
        btnModificarClien.setEnabled(true);
        btnGuardarClien.setEnabled(false);
    }//GEN-LAST:event_jtbClientesMouseClicked

    private void btnCancelaAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelaAccionActionPerformed
        // TODO add your handling code here:
        jtbClientes.setSelectionMode(seleccionTabla2);//.addSelectionInterval(seleccionTabla2, seleccionTabla2);
        seleccionTabla2 = 0;
        limpiarCampos();
        btnCancelaAccion.setEnabled(false);
        btnEliminarClient.setEnabled(false);
        btnModificarClien.setEnabled(false);
        btnGuardarClien.setEnabled(true);
    }//GEN-LAST:event_btnCancelaAccionActionPerformed

    public void RegistrarCliente() {
        System.out.println("Registrando  Cliente");
        String cedula = String.valueOf(txtCedula.getText());
        String nombre = txtNombre.getText();
        String apellido = txtApellido.getText();
        String direccion = txtDireccion.getText();
        String telefono = String.valueOf(txtTlf.getText());
        String email = txtMail.getText();

        boolean repetido = false;

        Statement st;
        try {
            String[] RegistroClien = new String[5];
            String sql = "SELECT * FROM Clientes";
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            int cuente = 0;
            while (rs.next()) {
                System.out.println("Comparando si la cedula ya existe");
                RegistroClien[1] = rs.getString("IdClien");
                if (cedula.equals(RegistroClien[1])) {
                    JOptionPane.showMessageDialog(null, "La Cédula: " + txtCedula.getText() + " ya existe ingrese una nueva cédula", "ERROR DE CÓDIGO", JOptionPane.ERROR_MESSAGE);
                    repetido = true;
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error 1 al tratar de registrar " + ex);
        }
        if (repetido == false) {
            try {
                //            Calendar calendario = Calendar.getInstance();
                Calendar calendario = new GregorianCalendar();
                int hora, minutos, segundos, dia, mes, anio;
                anio = calendario.get(Calendar.YEAR);
                mes = calendario.get(Calendar.MONTH);
                dia = calendario.get(Calendar.DAY_OF_MONTH);
                hora = calendario.get(Calendar.HOUR_OF_DAY);
                minutos = calendario.get(Calendar.MINUTE);
                segundos = calendario.get(Calendar.SECOND);
                String fechaHora = anio + "" + mes + 1 + "" + dia + " " + hora + ":" + minutos + ":" + segundos;
                System.out.println("LA fecha completa es: " + fechaHora);
                if (dia < 10) {
                    fechaHora = anio + "" + mes + 1 + "0" + dia + " " + hora + ":" + minutos + ":" + segundos;
                    System.out.println("Ingreso en la condicion de fecha menor que 10");
                    System.out.println("LA fecha completa a resitrar es: " + fechaHora);
                } else {
                    fechaHora = anio + "" + mes + 1 + "" + dia + " " + hora + ":" + minutos + ":" + segundos;
                    System.out.println("LA fecha completa a resitrar es: " + fechaHora);
                }

                ProcedimientosAlmacenados.RegistrarClient(cedula, nombre, apellido, direccion, email, telefono, fechaHora);

                JOptionPane.showMessageDialog(this, "Registrado con exito");
                llenarTablaClientes();
                limpiarCampos();
            } catch (SQLException ex) {
//                Logger.getLogger(JFrClientes.class.getName()).log(Level.SEVERE, null,ex);
                JOptionPane.showMessageDialog(this, "Error 2 al tratar de registrar " + ex);

            }
        }
    }

    public void limpiarCampos() {
        txtCedula.setText(null);
        txtNombre.setText(null);
        txtApellido.setText(null);
        txtDireccion.setText(null);
        txtTlf.setText(null);
        txtMail.setText(null);
    }

    public static boolean ValidarEmail(String Email) {

        // Patrón para validar el email
        Pattern pattern = Pattern
                .compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                        + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");

        // El email a validar
//        String email = "info@programacionextrema.com";
        Matcher mather = pattern.matcher(Email);

        if (mather.find() == true) {
            System.out.println("El email ingresado es válido.");
            return true;
        } else {
            System.out.println("El email ingresado no es inválido.");
            JOptionPane.showMessageDialog(null, "El correo ingresado no es valido!!", "Error de Email", JOptionPane.WARNING_MESSAGE);
            return false;
        }

    }

    public void llenarTablaClientes() {

        String[] TitulosColumnas = {"Cédula", "Apellido", "Nombre", "Dirección", "Teléfono", "Email"};
        String[] RegistrosClien = new String[6];

        String sql = "SELECT * FROM Clientes";

        registroClientes = new DefaultTableModel(null, TitulosColumnas);

        Conexion cc = new Conexion();
        Connection cn = cc.getConnection();

        ConexionInter.Conexion.getConnection();
        System.out.println("Conexion Establecida");

        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                RegistrosClien[0] = rs.getString("IdClien");
                RegistrosClien[1] = rs.getString("ApelClien");
                RegistrosClien[2] = rs.getString("NombClien");
                RegistrosClien[3] = rs.getString("DirecClien");
                RegistrosClien[4] = rs.getString("TlfClien");
                RegistrosClien[5] = rs.getString("EmailClien");

                registroClientes.addRow(RegistrosClien);
            }
            jtbClientes.setModel(registroClientes);

        } catch (SQLException ex) {
            System.out.println("El tipo de erro es: " + ex);
        }
    }

//    public class algoritmo {
    public static boolean validaCedula(String x) {
        int suma = 0;
        if (x.length() == 9) {
            System.out.println("Ingrese su cedula de 10 digitos");
            return false;
        } else {
            int a[] = new int[x.length() / 2];
            int b[] = new int[(x.length() / 2)];
            int c = 0;
            int d = 1;
            for (int i = 0; i < x.length() / 2; i++) {
                a[i] = Integer.parseInt(String.valueOf(x.charAt(c)));
                c = c + 2;
                if (i < (x.length() / 2) - 1) {
                    b[i] = Integer.parseInt(String.valueOf(x.charAt(d)));
                    d = d + 2;
                }
            }

            for (int i = 0; i < a.length; i++) {
                a[i] = a[i] * 2;
                if (a[i] > 9) {
                    a[i] = a[i] - 9;
                }
                suma = suma + a[i] + b[i];
            }
            int aux = suma / 10;
            int dec = (aux + 1) * 10;
            if ((dec - suma) == Integer.parseInt(String.valueOf(x.charAt(x.length() - 1)))) {
                System.out.println("Valida");
                return true;
            } else if (suma % 10 == 0 && x.charAt(x.length() - 1) == '0') {
                System.out.println("Valida");
                return true;
            } else {
                System.out.println("No Valida");
                return false;
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelaAccion;
    private javax.swing.JButton btnEliminarClient;
    private javax.swing.JButton btnGuardarClien;
    private javax.swing.JButton btnModificarClien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbClientes;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTlf;
    // End of variables declaration//GEN-END:variables
}
